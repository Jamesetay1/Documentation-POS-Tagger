<p> Given the <code> head </code> of a linked list , remove the <code> nth </code> node from the end of the list and return its head . </p> 
<p> Follow up : Could you do this in one pass ? </p> 
<p> </p> 
<p> Example 1 : </p> 
<pre> Input : head = [ 1 , 2 , 3 , 4 , 5 ] , n = 2 Output : [ 1 , 2 , 3 , 5 ] </pre> 
<p> Example 2 : </p> 
<pre> Input : head = [ 1 ] , n = 1 Output : [ ] </pre> 
<p> Example 3 : </p> 
<pre> Input : head = [ 1 , 2 ] , n = 1 Output : [ 1 ] </pre> 
<p> </p> 
<p> Constraints : </p> 
The number of nodes in the list is <code> sz </code> . <code> 1 < = sz < = 30 </code> <code> 0 < = Node . val < = 100 </code> <code> 1 < = n < = sz </code> 