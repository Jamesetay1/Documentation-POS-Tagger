<p> You are given a string <code> s </code> and an array of strings <code> words </code> of the same length . 
Return all starting indices of substring ( s ) in <code> s </code> that is a concatenation of each word in <code> words </code> exactly once , in any order , and without any intervening characters . </p> 
<p> You can return the answer in any order . </p> 
<p> </p> 
<p> Example 1 : </p> 
<pre> Input : s = " barfoothefoobarman " , words = [ " foo " , " bar " ] Output : [ 0 , 9 ] Explanation : Substrings starting at index 0 and 9 are " barfoo " and " foobar " respectively . The output order does not matter , returning [ 9 , 0 ] is fine too . </pre> 
<p> Example 2 : </p> 
<pre> Input : s = " wordgoodgoodgoodbestword " , words = [ " word " , " good " , " best " , " word " ] Output : [ ] </pre> 
<p> Example 3 : </p> 
<pre> Input : s = " barfoofoobarthefoobarman " , words = [ " bar " , " foo " , " the " ] Output : [ 6 , 9 , 12 ] </pre> 
<p> </p> 
<p> Constraints : </p> 
<code> 1 < = s . length < = 104 </code> <code> s </code> consists of lower - case English letters . <code> 1 < = words . length < = 5000 </code> <code> 1 < = words [ i ] . length < = 30 </code> <code> words [ i ] </code> consists of lower - case English letters . 