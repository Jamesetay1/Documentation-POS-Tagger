<p> Implement next permutation , which rearranges numbers into the lexicographically next greater permutation of numbers . </p> 
<p> If such an arrangement is not possible , it must rearrange it as the lowest possible order ( i . e . , sorted in ascending order ) . </p> 
<p> The replacement must be in place and use only constant extra memory . </p> 
<p> </p> 
<p> Example 1 : </p> <pre> Input : nums = [ 1 , 2 , 3 ] Output : [ 1 , 3 , 2 ] </pre> 
<p> Example 2 : </p> <pre> Input : nums = [ 3 , 2 , 1 ] Output : [ 1 , 2 , 3 ] </pre> 
<p> Example 3 : </p> <pre> Input : nums = [ 1 , 1 , 5 ] Output : [ 1 , 5 , 1 ] </pre> 
<p> Example 4 : </p> <pre> Input : nums = [ 1 ] Output : [ 1 ] </pre> 
<p> </p> 
<p> Constraints : </p> 
<code> 1 < = nums . length < = 100 </code> <code> 0 < = nums [ i ] < = 100 </code> 