TimerTask ( Java Platform SE 8 ) 
JavaScript is disabled on your browser . 
Skip navigation links 
Overview Package Class Use Tree Deprecated Index Help 
Java™ PlatformStandard Ed . 8 
Prev Class Next Class 
Frames No Frames 
All Classes 
Summary : Nested | Field | Constr | Method 
Detail : Field | Constr | Method 
compact1 , compact2 , compact3 java . util Class TimerTask 
java . lang . 
Object 
java . util . 
TimerTask 
All Implemented Interfaces : Runnable 
<pre> public abstract class TimerTask extends Object implements Runnable </pre> A task that can be scheduled for one - time or repeated execution by a Timer . 
Since : 1 . 3 See Also : <code> Timer </code> 
Constructor Summary 
Constructors 
Modifier Constructor and Description 
<code> protected </code> <code> TimerTask ( ) </code> Creates a new timer task . 
Method Summary 
All Methods Instance Methods Abstract Methods Concrete Methods 
Modifier and Type Method and Description 
<code> boolean </code> <code> cancel ( ) </code> Cancels this timer task . 
<code> abstract void </code> <code> run ( ) </code> The action to be performed by this timer task . 
<code> long </code> <code> scheduledExecutionTime ( ) </code> Returns the scheduled execution time of the most recent actual execution of this task . 
Methods inherited from class java . lang . 
Object <code> clone , equals , finalize , getClass , hashCode , notify , notifyAll , toString , wait , wait , wait </code> 
Constructor Detail 
TimerTask <pre> protected TimerTask ( ) </pre> Creates a new timer task . 
Method Detail 
run <pre> public abstract void run ( ) </pre> The action to be performed by this timer task . 
Specified by : <code> run </code> in interface <code> Runnable </code> See Also : <code> Thread . run ( ) </code> 
cancel <pre> public boolean cancel ( ) </pre> Cancels this timer task . 
If the task has been scheduled for one - time execution and has not yet run , or has not yet been scheduled , it will never run . 
If the task has been scheduled for repeated execution , it will never run again . ( If the task is running when this call occurs , the task will run to completion , but will never run again . ) 
<p> Note that calling this method from within the run method of a repeating timer task absolutely guarantees that the timer task will not run again . 
<p> This method may be called repeatedly ; the second and subsequent calls have no effect . 
Returns : true if this task is scheduled for one - time execution and has not yet run , or this task is scheduled for repeated execution . Returns false if the task was scheduled for one - time execution and has already run , or if the task was never scheduled , or if the task was already cancelled . ( Loosely speaking , this method returns true if it prevents one or more scheduled executions from taking place . ) 
scheduledExecutionTime <pre> public long scheduledExecutionTime ( ) </pre> Returns the scheduled execution time of the most recent actual execution of this task . ( If this method is invoked while task execution is in progress , the return value is the scheduled execution time of the ongoing task execution . ) 
<p> This method is typically invoked from within a task ' s run method , to determine whether the current execution of the task is sufficiently timely to warrant performing the scheduled activity : <pre> <code> public void run ( ) { if ( System . currentTimeMillis ( ) - scheduledExecutionTime ( ) > = MAX _ TARDINESS ) return ; / / Too late ; skip this execution . / / Perform the task } 
This method is typically not used in conjunction with fixed - delay execution repeating tasks , as their scheduled execution times are allowed to drift over time , and so are not terribly significant . 
Returns : the time at which the most recent execution of this task was scheduled to occur , in the format returned by Date . getTime ( ) . The return value is undefined if the task has yet to commence its first execution . See Also : <code> Date . getTime ( ) </code> 
Skip navigation links 
Overview Package Class Use Tree Deprecated Index Help 
Java™ PlatformStandard Ed . 8 
Prev Class Next Class 
Frames No Frames 
All Classes 
Summary : Nested | Field | Constr | Method 
Detail : Field | Constr | Method 
Submit a bug or feature For further API reference and developer documentation , see Java SE Documentation . 
That documentation contains more detailed , developer - targeted descriptions , with conceptual overviews , definitions of terms , workarounds , and working code examples . 
Copyright © 1993 , 2020 , Oracle and / or its affiliates . 
All rights reserved . 
Use is subject to license terms . 
Also see the documentation redistribution policy . 